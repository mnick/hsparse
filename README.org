* hsparse
**** Haskell library for sparse vector and matrix operations

=hsparse= supports operations such as dot products, matrix products between
sparse vectors and matrices. The library is geared towards very efficient
operations when /all/ vectors/matrices are sparse, e.g.,

- Dot products between two sparse vectors.
- Multiplication of a sparse matrix and sparse vector
- Multiplication of two sparse matrices.

Dimensions of matrices and vectors are strongly typed:

#+BEGIN_SRC haskell
  λ> import Numeric.Sparse
  λ> import Numeric.Sparse.Matrix as M
  λ> import Numeric.Sparse.Vector as V

  λ> let m = M.empty :: SparseMatrix 10 6 Double
  λ> let v = V.fromList [(1,2), (4,3.5)] :: SparseVector 7 Double

  λ> v <> v
  16.25

  λ> m |> v

  <interactive>:36:6-7:
      Couldn't match type ‘7’ with ‘6’
      Expected type: SparseVector 6 Double
        Actual type: SparseVector 7 Double
      In the second argument of ‘(|>)’, namely ‘v’
      In the expression: m |> v
#+END_SRC

Internally the sparse matrices and vectors are efficiently represented via
~Data.IntMap~.

=hsparse= is closely related to the great [[https://github.com/laughedelic/sparse-lin-alg][sparse-lin-alg]] and builds on it's
ideas and code. Important differences include

- Strongly typed dimensions
- Zero values are not explicitly created
  - =hsparse= uses ~Maybe~ for zero values
  - =sparse-lin-alg= filters zeros afterwards
- Additional operations
  - scaling, norm of vectors
  - Givens rotation of matrices
  - ...
